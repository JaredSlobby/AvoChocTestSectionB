/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package avochoc.SectionB;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigInteger;

public class Algorithms1 
{    
    public static void main(String[] args) 
    {
        String inputFilePath = "app/src/main/resources/algorithms1.csv";
        String outputFilePath = "app/src/main/resources/algorithms1Sorted.csv";
        // Read the CSV file and store the numbers
        BigInteger[] numbers = readCSVFile(inputFilePath);
        // Sort the numbers
        bubbleSort(numbers);
        // Write the sorted numbers back to the CSV file
        writeToCSV(outputFilePath, numbers);
    }

    public static BigInteger[] readCSVFile(String filePath) 
    {
        BigInteger[] numbers = new BigInteger[0];
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) 
        {
            String line;
            int count = 0;
            while ((line = reader.readLine()) != null) 
            {
                count++;
            }
            numbers = new BigInteger[count];
            reader.close();
            try (BufferedReader newReader = new BufferedReader(new FileReader(filePath))) 
            {
                int i = 0;
                while ((line = newReader.readLine()) != null) 
                {
                    numbers[i++] = new BigInteger(line);
                }
            }
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }

        return numbers;
    }

    public static void writeToCSV(String filePath, BigInteger[] numbers) 
    {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) 
        {
            for (BigInteger number : numbers) 
            {
                writer.write(number.toString());
                writer.newLine();
            }
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
    }

    public static void bubbleSort(BigInteger[] numbers)
    {
        int n = numbers.length;
        for (int i = 0; i < n - 1; i++) 
        {
            for (int j = 0; j < n - i - 1; j++) 
            {
                if (numbers[j].compareTo(numbers[j + 1]) > 0) 
                {
                    // Swap arr[j] and arr[j + 1]
                    BigInteger temp = numbers[j];
                    numbers[j] = numbers[j + 1];
                    numbers[j + 1] = temp;
                }
            }
        }
    }
}
    
    

